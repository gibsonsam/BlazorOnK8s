name: Build & Deploy with Aspirate

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: ${{ secrets.ACR_NAME }}
      ACR_REPO: ${{ secrets.ACR_REPO }}
      ACR_SERVER: ${{ secrets.ACR_SERVER }}
      AKS_NAME: ${{ secrets.AKS_NAME }}
      AKS_RG: ${{ secrets.AKS_RG }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
      # Checkout source
      - name: Checkout
        uses: actions/checkout@v4

      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3

      # # Terraform
      # - name: Terraform
      #   working-directory: infra
      #   run: |
      #     terraform init
      #     terraform plan -out=tfplan
      #     terraform apply -auto-approve tfplan

      # Pull kubeconfig from AKS
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group $AKS_RG --name $AKS_NAME --overwrite-existing

      # Log in to ACR
      - name: Azure Container Registry Login
        run: az acr login --name $ACR_NAME

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore .NET Tools
        run: dotnet tool restore

      - name: Build and Publish Image
        run: >
          dotnet publish src/BlazorOnK8s.AppHost/BlazorOnK8s.AppHost.csproj
          -t:PublishContainer
          -p:ContainerRegistry="$ACR_SERVER"
          -p:ContainerRepository="$ACR_REPO/$ACR_NAME"
          -p:ContainerImageTag="${{ github.sha }}"
          --verbosity "quiet" --nologo -r "linux-x64"

      - name: Generate artifacts with aspire
        run: dotnet aspire publish -o aspirate-output

      - name: Patch generated values to exact image
        env:
          IMAGE: ${{ env.ACR_SERVER }}/${{ env.ACR_REPO }}/blazoronk8s:${{ github.sha }}
        run: |
          sed 's/^\(blazoronk8s_image: \).*$/\${env:IMAGE}/' ./aspirate-output/values.yaml

      - name: Install Helm
        uses: azure/setup-helm@v4.3.0

      - name: Helm Deploy
        run: helm upgrade --install aspire ./aspirate-output --namespace default