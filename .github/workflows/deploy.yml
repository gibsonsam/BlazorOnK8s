name: Build & Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: ${{ secrets.ACR_NAME }}
      ACR_SERVER: ${{ secrets.ACR_SERVER }}
      AKS_NAME: ${{ secrets.AKS_NAME }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      IMAGE_NAME: blazoronk8s
    steps:
      # Checkout source
      - name: Checkout
        uses: actions/checkout@v4

      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3

      # # Terraform
      # - name: Terraform
      #   working-directory: infra
      #   run: |
      #     terraform init
      #     terraform plan -out=tfplan
      #     terraform apply -auto-approve tfplan

      # Pull kubeconfig from AKS
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_NAME --overwrite-existing

      # Log in to ACR
      - name: Azure Container Registry Login
        run: az acr login --name $ACR_NAME

      # Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Restore dependencies
      - name: Restore .NET Tools
        run: dotnet tool restore

      - name: Build and Publish Image
        run: |
          dotnet publish src/BlazorOnK8s/BlazorOnK8s.csproj \
          --configuration Release \
          --os linux \
          --arch x64 \
          --target:PublishContainer \
          --property:ContainerRegistry=$ACR_SERVER \
          --property:ContainerRepository=$IMAGE_NAME \
          --property:ContainerImageTag=${{ github.sha }}

      - name: Generate artifacts with aspire
        run: dotnet aspire publish -o aspire-output

      # - name: Patch generated values to exact image
      #   env:
      #     IMAGE: ${{ env.ACR_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      #   run: |
      #     sed -i "s/blazoronk8s:latest/${IMAGE//\//\\/}/" "aspire-output/values.yaml"

      - name: Install Helm
        uses: azure/setup-helm@v4.3.0

      - name: Helm Deploy
        env:
          IMAGE: ${{ env.ACR_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        run: |
          helm upgrade --install aspire ./aspire-output --namespace default \
          --set parameters.blazoronk8s.blazoronk8s_image=$IMAGE